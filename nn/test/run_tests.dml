/*
 * Script to run tests.
 */
source("nn/test/grad_check.dml") as grad_check
source("nn/test/test.dml") as test

print("")
print("Starting grad checks.")
print("---")

# Loss & loss-related functions
tmp = grad_check::cross_entropy_loss()
tmp = grad_check::l1_loss()
tmp = grad_check::l1_reg()
tmp = grad_check::l2_loss()
tmp = grad_check::l2_reg()
tmp = grad_check::log_loss()
print("")

# Core layers
tmp = grad_check::affine()
tmp = grad_check::batch_norm1d()
tmp = grad_check::batch_norm2d()
tmp = grad_check::conv2d()
tmp = grad_check::conv2d_builtin()
tmp = grad_check::conv2d_simple()
tmp = grad_check::dropout()
tmp = grad_check::lstm()
tmp = grad_check::max_pool2d()
tmp = grad_check::max_pool2d_builtin()
tmp = grad_check::max_pool2d_simple()
tmp = grad_check::relu()
tmp = grad_check::rnn()
tmp = grad_check::scale_shift1d()
tmp = grad_check::scale_shift2d()
tmp = grad_check::sigmoid()
tmp = grad_check::softmax()
tmp = grad_check::tanh()
print("")

# Example model
tmp = grad_check::two_layer_affine_l2_net()
print("")

print("---")
print("Grad checks complete -- look for any ERRORs or WARNINGs.")
print("If any tests involving ReLUs failed, try a few times " +
      "to ensure that they were not false negatives due to " +
      "kinks being crossed.")
print("")

print("")
print("Starting other tests.")
print("---")

tmp = test::batch_norm1d()
tmp = test::batch_norm2d()
tmp = test::conv2d()
tmp = test::cross_entropy_loss()
tmp = test::im2col()
tmp = test::max_pool2d()
tmp = test::padding()
tmp = test::tanh()

print("---")
print("Other tests complete -- look for any ERRORs or WARNINGs.")
print("")
print("")

