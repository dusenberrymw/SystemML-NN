/*
 * Utilities for running tests.
 *
 * Namespace requirements:
 *  - "test_util" available via `source("test_util.dml") as test_util`.
 */
all_equal = function(matrix[double] x1, matrix[double] x2)
    return(boolean equivalent) {
  /*
   * Determine if two matrices are equivalent.
   *
   * Inputs:
   *  - x1: Input matrix, of shape (any, any).
   *  - x2: Input matrix, of same shape as x1.
   *
   * Outputs:
   *  - equivalent: Whether or not the two matrices are equivalent.
   */
  equivalent = as.logical(prod(ppred(x1, x2, "==")))
}

compute_rel_error = function(double x1, double x2) return (double rel_error) {
  /*
   * Relative error measure between two values.
   *
   * Uses smoothing to avoid divide-by-zero errors.
   *
   * Inputs:
   *  - x1: First value.
   *  - x2: Second value.
   *
   * Outputs:
   *  - rel_error: Relative error measure between the two values.
   */
  rel_error = abs(x1 - x2) / max(1e-8, abs(x1) + abs(x2))
}

check_rel_error = function(double x1, double x2, double thresh_error, double thresh_warn)
    return (double rel_error) {
  /*
   * Check and report any issues with the relative error measure between
   * two values.
   *
   *  - Issues an "ERROR" statement for relative errors > thresh_error,
   *  indicating that the implementation is likely incorrect.
   *  - Issues a "WARNING" statement for relative errors < thresh_error
   *  but > thresh_warn, indicating that the implementation may be incorrect.
   *
   * Inputs:
   *  - x1: First value.
   *  - x2: Second value.
   *  - thresh_error: Error threshold.
   *  - thresh_warn: Warning threshold.
   *
   * Outputs:
   *  - rel_error: Relative error measure between the two values.
   */
  # Compute relative error
  rel_error = test_util::compute_rel_error(x1, x2)

  # Evaluate relative error
  if (rel_error > thresh_error) {
      print("ERROR: Relative error " + rel_error + " > " + thresh_error + " with " + x1 +
            " vs " + x2 + ".")
  }
  else if (rel_error > thresh_warn & rel_error < thresh_error) {
      print("WARNING: Relative error " + rel_error + " > " + thresh_warn + " with " + x1 +
            " vs " + x2 + ".")
  }
}

